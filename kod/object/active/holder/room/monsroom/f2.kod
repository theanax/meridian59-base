// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
OutdoorsF2 is MonsterRoom

constants:

   include blakston.khd

   /// Value of the Ice Elementals towards summoning their champion
   ICE_VALUE = -100

   /// How much do we need to summon the champion?
   ICE_VALUE_NEEDED = 2000 

   /// Champion respawn limit timer (Not currently being used, If we decide this is needed then ICE_VALUE_NEEDED can be reduced)
   /// ICE_ALREADY_SUMMONED = -100000

resources:

   include f2.lkod

   room_OutdoorsF2 = f2.roo
   room_name_OutdoorsF2 ="The sandy shores of the Great Ocean"
   waterfall_soundF2 = wfall2.ogg

   OutdoorsF2_music = walk7.ogg

   F2_oceanwalk = \
      "You're already up to your ankles in saltwater, and you "
      "decide that's quite enough."
   F2_icewalk = "The ice looks a bit too thin to risk going any farther out."
   F2_ice = \
      "~IThe air off of the ocean feels colder... "
   F2_ice_final = \
      "~IThe air suddenly feels frozen. It's as if you can see ice crystals in the air."

   ocean_soundF2 = ocean.ogg
   wavecrash1_soundF2 = wave1.ogg
   wavecrash2_soundF2 = wave2.ogg
   wavecrash3_soundF2 = wave3.ogg
   wavecrash4_soundF2 = wave4.ogg
   seagull_soundF2 = gulls.ogg

classvars:

   vrName = room_name_OutdoorsF2

   viTeleport_row = 14
   viTeleport_col = 48

   viTerrain_type = TERRAIN_BEACH | TERRAIN_FOREST | TERRAIN_WATERFALL

   viFlag_row = 17
   viFlag_col = 80

   viWeatherZone = WEATHER_ZONE_BARLOQUE
   viWeatherMask = WEATHER_MASK_SUMMER_SNOW // Always snowing

properties:

   prRoom = room_OutdoorsF2
   prMusic = OutdoorsF2_music
   piRoom_num = RID_F2

   piBaseLight = LIGHT_NICE
   piOutside_factor = 8

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   pbSnowGroundTexture = TRUE

   piGen_time = 20000
   piGen_percent = 80

   piInit_count_min = 4
   piInit_count_max = 6
   piMonster_count_max = 15

   // This is the tally of the value of elementals killed.
   piIceValue = 0

messages:

   Constructed()
   {
      plMonsters = [ [&IceElemental, 100] ];

      plLooping_sounds = [[ waterfall_soundF2, 1, 101 ],[ ocean_soundF2, 1, 59, 200, 100 ]];

      propagate;
   }

   SetMonsterGenPoints()
   {
      plGenerators = [ [5, 6], [19, 7], [15, 27], [20, 31], [6, 37],
                       [12, 46], [11, 68], [10, 81], [6, 91], [19, 89] ];

      return;
   }

   CreatePeriodicSounds()
   {
      plPeriodic_sounds = [ wavecrash1_soundF2, wavecrash2_soundF2, wavecrash3_soundF2,\
                            wavecrash4_soundF2, seagull_soundF2, seagull_soundF2 ];
      pbPeriodic_sound_random_location = TRUE;

      propagate;
   }

 CreateStandardExits()
   {
      plEdge_Exits = $;
      plEdge_Exits = Cons([LEAVE_EAST, RID_BAR_SEWER, 58, 2, ROTATE_NONE], plEdge_exits);
      plEdge_Exits = Cons([LEAVE_WEST, RID_E2, 21, 71, ROTATE_NONE], plEdge_exits);

      propagate;
   }

   StandardLeaveDir(what = $,dir = $,pos = $,new_room_num = $)
   {
      if (dir = LEAVE_NORTH)
      {
         if (IsClass(what,&Player))
         {
            if Send(self,@CheckRoomFlag,#flag=ROOM_SNOWING)
               AND pbSnowGroundTexture
            {
               Send(what,@MsgSendUser,#message_rsc=F2_icewalk);
            }
            else
            {
               Send(what,@MsgSendUser,#message_rsc=F2_oceanwalk);
            }
         }

         return;
      }

      propagate;
   }

   FirstUserEntered()
   {
      // Reset the ice value.
      piIceValue = 0;

      propagate;
   }

   CreateStandardObjects()
   {
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=21,#new_col=6);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=17,#new_col=10);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=19,#new_col=14);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=17,#new_col=28);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=21,#new_col=33);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=21,#new_col=36);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=18,#new_col=47);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=22,#new_col=55);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=16,#new_col=57);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=21,#new_col=62);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=20,#new_col=72);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=19,#new_col=87);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=18,#new_col=92);
      Send(self,@NewHold,#what=Create(&OrnamentalObject,#type=OO_TALLTREE2),
            #new_row=22,#new_col=93);

      propagate;
   }

      SomethingKilled(what = $,victim = $)
   {
      local cClass;

      // Add up each Ice Elemental killed so when know when the Champion should be summoned.
      if what <> $
         AND IsClass(what,&Player)
      {
         cClass = GetClass(victim);

         if (cClass = &IceElemental)
         {
            Send(self,@IceChanged,#amount=ICE_VALUE);
         }
      }

      propagate;
   }

   IceChanged(amount = 0)
   "The Ice Champion Commeth"
   {
      piIceValue += amount;

      // Did we swing it far enough to be valuable?

      if piIceValue <= -ICE_VALUE_NEEDED
      {
         Post(self,@SomeoneSaid,#type=SAY_MESSAGE,#what=self,
               #string=F2_ice_final);
         
         /// Spawn the champion
         Send(self,@NewHold,#what=Create(&NeruElementalChampion),#new_row=28,#new_col=63,
               #fine_row=40,#fine_col=32,#new_angle=ANGLE_NORTH_WEST);

         /// Reset the spawn counter
         piIceValue = 0;
      }

      else if amount < 0
         AND (piIceValue > 0
            OR piIceValue < -(ICE_VALUE_NEEDED/4))
      {
         Send(self,@Rumble);
         Post(self,@SomeoneSaid,#type=SAY_MESSAGE,#what=self,#string=F2_ice);
      }

      return;
   }

end
////////////////////////////////////////////////////////////////////////////////
